 Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10,000
ii. Business table = 10,000
iii. Category table = 10,000
iv. Checkin table = 10,000
v. elite_years table = 10,000
vi. friend table = 10,000
vii. hours table = 10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table = 10,000
	

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10,000 
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = User_id 9581 business_id 8090, id 10,000
vi. Checkin = 493
vii. Photo = id 10,000 business_id 6493
viii. Tip = user_id 537, business_id 3973
ix. User = 10,000
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	


3. Determine if there any columns with null values in the Users table?

	Answer: No
	
	SQL code used to arrive at answer:

SELECT COUNT(*)
FROM user
WHERE Id IS NULL OR 
Name IS NULL OR 
Review_Count IS NULL OR 
Yelping_Since IS NULL OR
Useful IS NULL OR 
Funny IS NULL OR 
Cool IS NULL OR 
Fans IS NULL OR 
Average_Stars IS NULL OR 
Compliment_Hot IS NULL OR 
Compliment_More IS NULL OR 
Compliment_Profile IS NULL OR 
Compliment_Cute IS NULL OR 
Compliment_List IS NULL OR 
Compliment_Note IS NULL OR 
Compliment_Plain IS NULL OR 
Compliment_Cool IS NULL OR 
Compliment_Funny IS NULL OR 
Compliment_Writer IS NULL OR 
Compliment_Photos IS NULL;
	

4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min:1		max:5		avg:3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min:1		max:5		avg:3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min:0		max:2		avg:0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min:1		max:53		avg:1.9414
		
	
	v. Table: User, Column: Review_count
	
		min:0		max:2000		avg:24.2995
		

5. Determine and List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:

SELECT City ,SUM(Review_Count) AS Reviews
FROM Business
GROUP BY City
ORDER BY Reviews DESC;
+-----------------+---------+
| city            | Reviews |
+-----------------+---------+
| Las Vegas       |   82854 |
| Phoenix         |   34503 |
| Toronto         |   24113 |
| Scottsdale      |   20614 |
| Charlotte       |   12523 |
| Henderson       |   10871 |
| Tempe           |   10504 |
| Pittsburgh      |    9798 |
| Montr√©al        |    9448 |
| Chandler        |    8112 |
| Mesa            |    6875 |
| Gilbert         |    6380 |
| Cleveland       |    5593 |
| Madison         |    5265 |
| Glendale        |    4406 |
| Mississauga     |    3814 |
| Edinburgh       |    2792 |
| Peoria          |    2624 |
| North Las Vegas |    2438 |
| Markham         |    2352 |
| Champaign       |    2029 |
| Stuttgart       |    1849 |
| Surprise        |    1520 |
| Lakewood        |    1465 |
| Goodyear        |    1155 |
+-----------------+---------+

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

	SQL code used to arrive at answer:

SELECT stars, count(stars) as num_count
FROM business
WHERE city = 'Avon'
GROUP BY stars
+-------+-----+
| stars | num_count |
+-------+-----+
|   1.5 |   1 |
|   2.5 |   2 |
|   3.5 |   3 |
|   4.0 |   2 |
|   4.5 |   1 |
|   5.0 |   1 |
+-------+-----+

ii. Beachwood

	SQL code used to arrive at answer:

SELECT stars, count(stars) as num_count
FROM business
WHERE city = 'Beachwood'
GROUP BY stars	
+-------+-----+
| stars | num_count |
+-------+-----+
|   2.0 |   1 |
|   2.5 |   1 |
|   3.0 |   2 |
|   3.5 |   2 |
|   4.0 |   1 |
|   4.5 |   2 |
|   5.0 |   5 |
+-------+-----+

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
SELECT id, name, review_count
FROM user
ORDER BY review_count DESC
LIMIT 3;
		
	Copy and Paste the Result Below:
+------------------------+--------+--------------+
| id                     | name   | review_count |
+------------------------+--------+--------------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald |         2000 |
| -3s52C4zL_DHRK0ULG6qtg | Sara   |         1629 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri   |         1339 |
+------------------------+--------+--------------+		


8. Does posing more reviews correlate with more fans?

While it would appear having more reviews correlates with having more fans, that is not always the case. 
For example, the user with the most reviews, 2000, has 253 fans but the user that has 968 reviews has more
fans at 497. Obviously the more you are on Yelp reviewing, the more exposure you will have to creating fans 
but there is more to it than just the number of reviews. See table below which demonstrates that higher review_counts
does not always correlate with more fans.
+------------------------+-----------+--------------+------+
| id                     | name      | review_count | fans |
+------------------------+-----------+--------------+------+
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 |
| -3s52C4zL_DHRK0ULG6qtg | Sara      |         1629 |   50 |
| -8lbUNlXVSoXqaRRiHiSNg | Yuri      |         1339 |   76 |
| -K2Tcgh2EKX6e6HqqIrBIQ | .Hon      |         1246 |  101 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 |
| -2vR0DIsmQ6WfcSzKWigw  | Harald    |         1153 |  311 |
| -gokwePdbXjfS0iF7NsUGA | eric      |         1116 |   16 |
| -DFCC64NXgqrxlO8aLU5rg | Roanna    |         1039 |  104 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 |
| -fUARDNuXAfrOn4WLSZLgA | Ed        |          904 |   38 |
| -hKniZN2OdshWLHYuj21jQ | Nicole    |          864 |   43 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 |
| -B-QEUESGWHPE_889WJaeg | Mark      |          861 |  115 |
| -kLVfaJytOJY2-QdQoCcNQ | Christina |          842 |   85 |
| -kO6984fXByyZm3_6z2JYg | Dominic   |          836 |   37 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 |
| -l9giG8TSDBG1jnUBUXp5w | Alison    |          775 |   61 |
| -dw8f7FLaUmWR7bfJ_Yf0w | Sui       |          754 |   78 |
| -AaBjWJYiQxXkCMDlXfPGw | Tim       |          702 |   35 |
| -jt1ACMiZljnBFvS6RRvnA | L         |          696 |   10 |
| -IgKkE8JvYNWeGu8ze4P8Q | Angela    |          694 |  101 |
| -hxUwfo3cMnLTv-CAaP69A | Crissy    |          676 |   25 |
| -H6cTbVxeIRYR-atxdielQ | Lyn       |          675 |   45 |
+------------------------+-----------+--------------+------+


	
9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Love = 1780
            Hate = 232

	
	SQL code used to arrive at answer:
--Love
SELECT user_id, text
FROM review
Where text LIKE '%love%'

--Hate
SELECT user_id, text
FROM review
Where text LIKE '%hate%';



10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:

SELECT id, name, review_count, fans
FROM user
ORDER BY fans DESC
LIMIT 10;
	
	Copy and Paste the Result Below:
+------------------------+-----------+--------------+------+
| id                     | name      | review_count | fans |
+------------------------+-----------+--------------+------+
| -9I98YbNQnLdAmcYfb324Q | Amy       |          609 |  503 |
| -8EnCioUmDygAbsYZmTeRQ | Mimi      |          968 |  497 |
| -2vR0DIsmQ6WfcSzKWigw  | Harald    |         1153 |  311 |
| -G7Zkl1wIWBBmD0KRy_sCw | Gerald    |         2000 |  253 |
| -0IiMAZI2SsQ7VmyzJjokQ | Christine |          930 |  173 |
| -g3XIcCb2b-BD0QBCcq2Sw | Lisa      |          813 |  159 |
| -9bbDysuiWeo2VShFJJtcw | Cat       |          377 |  133 |
| -FZBTkAZEXoP7CYvRV2ZwQ | William   |         1215 |  126 |
| -9da1xk7zgnnfO1uTVYGkA | Fran      |          862 |  124 |
| -lh59ko3dxChBSZ9U7LfUw | Lissa     |          834 |  120 |
+------------------------+-----------+--------------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	Toronto and Restaurants
i. Do the two groups you chose to analyze have a different distribution of hours?
When observing the city of Toronto, it appears that the group with 4-5 stars has an average distribution of hours less than the hours from the group with 2-3 stars.

ii. Do the two groups you chose to analyze have a different number of reviews?
When observing the city of Toronto, it appears that the group 4-5 stars has more reviews on average compared to the group with 2-3 stars.      
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
There is not enough data inputs to mae inferences between the two groups. I would need many more restaurants to evaluate if restaurants rated better based on location, for example. 


SELECT b.name, b.city, b.review_count, b.stars, h.hours
FROM category c JOIN hours h on c.business_id = h.business_id
JOIN business b on b.id = c.business_id
WHERE category = 'Restaurants' AND b.city = 'Toronto' AND (b.stars BETWEEN 2 AND 3)
ORDER BY b.review_count DESC;

SELECT b.name, b.city, b.review_count, b.stars, h.hours
FROM category c JOIN hours h on c.business_id = h.business_id
JOIN business b on b.id = c.business_id
WHERE category = 'Restaurants' AND b.city = 'Toronto' AND (b.stars BETWEEN 4 AND 5)
ORDER BY b.review_count DESC;

+------------------+---------+--------------+-------+-----------------------+
| name             | city    | review_count | stars | hours                 |
+------------------+---------+--------------+-------+-----------------------+
| Big Smoke Burger | Toronto |           47 |   3.0 | Monday|10:30-21:00    |
| Big Smoke Burger | Toronto |           47 |   3.0 | Tuesday|10:30-21:00   |
| Big Smoke Burger | Toronto |           47 |   3.0 | Friday|10:30-21:00    |
| Big Smoke Burger | Toronto |           47 |   3.0 | Wednesday|10:30-21:00 |10.5 hours
| Big Smoke Burger | Toronto |           47 |   3.0 | Thursday|10:30-21:00  |
| Big Smoke Burger | Toronto |           47 |   3.0 | Sunday|11:00-19:00    |
| Big Smoke Burger | Toronto |           47 |   3.0 | Saturday|10:30-21:00  |
| Pizzaiolo        | Toronto |           34 |   3.0 | Monday|9:00-23:00     |
| Pizzaiolo        | Toronto |           34 |   3.0 | Tuesday|9:00-23:00    |
| Pizzaiolo        | Toronto |           34 |   3.0 | Friday|9:00-4:00      |
| Pizzaiolo        | Toronto |           34 |   3.0 | Wednesday|9:00-23:00  |14 hours
| Pizzaiolo        | Toronto |           34 |   3.0 | Thursday|9:00-23:00   |
| Pizzaiolo        | Toronto |           34 |   3.0 | Sunday|10:00-23:00    |
| Pizzaiolo        | Toronto |           34 |   3.0 | Saturday|10:00-4:00   |
| 99 Cent Sushi    | Toronto |            5 |   2.0 | Monday|11:00-23:00    |
| 99 Cent Sushi    | Toronto |            5 |   2.0 | Tuesday|11:00-23:00   |
| 99 Cent Sushi    | Toronto |            5 |   2.0 | Friday|11:00-23:00    |
| 99 Cent Sushi    | Toronto |            5 |   2.0 | Wednesday|11:00-23:00 |12 hours
| 99 Cent Sushi    | Toronto |            5 |   2.0 | Thursday|11:00-23:00  |
| 99 Cent Sushi    | Toronto |            5 |   2.0 | Sunday|11:00-23:00    |
| 99 Cent Sushi    | Toronto |            5 |   2.0 | Saturday|11:00-23:00  |
+------------------+---------+--------------+-------+-----------------------+
+-------------+---------+--------------+-------+-----------------------+
| name        | city    | review_count | stars | hours                 |
+-------------+---------+--------------+-------+-----------------------+
| Edulis      | Toronto |           89 |   4.0 | Sunday|12:00-16:00    |
| Edulis      | Toronto |           89 |   4.0 | Friday|18:00-23:00    |
| Edulis      | Toronto |           89 |   4.0 | Wednesday|18:00-23:00 |5 hours
| Edulis      | Toronto |           89 |   4.0 | Thursday|18:00-23:00  |
| Edulis      | Toronto |           89 |   4.0 | Saturday|18:00-23:00  |
| Cabin Fever | Toronto |           26 |   4.5 | Monday|16:00-2:00     |
| Cabin Fever | Toronto |           26 |   4.5 | Tuesday|18:00-2:00    |
| Cabin Fever | Toronto |           26 |   4.5 | Friday|18:00-2:00     |
| Cabin Fever | Toronto |           26 |   4.5 | Wednesday|18:00-2:00  |
| Cabin Fever | Toronto |           26 |   4.5 | Thursday|18:00-2:00   |8 hours
| Cabin Fever | Toronto |           26 |   4.5 | Sunday|16:00-2:00     |
| Cabin Fever | Toronto |           26 |   4.5 | Saturday|16:00-2:00   |
| Sushi Osaka | Toronto |            8 |   4.5 | Monday|11:00-23:00    |
| Sushi Osaka | Toronto |            8 |   4.5 | Tuesday|11:00-23:00   |
| Sushi Osaka | Toronto |            8 |   4.5 | Friday|11:00-23:00    | 11 hours
| Sushi Osaka | Toronto |            8 |   4.5 | Wednesday|11:00-23:00 |
| Sushi Osaka | Toronto |            8 |   4.5 | Thursday|11:00-23:00  |
| Sushi Osaka | Toronto |            8 |   4.5 | Sunday|14:00-23:00    |
| Sushi Osaka | Toronto |            8 |   4.5 | Saturday|11:00-23:00  |
+-------------+---------+--------------+-------+-----------------------+
		
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
 Restaurants in Toronto that are open have more reviews than ones that are closed.        
         
ii. Difference 2:
Restaurants in Toronto that are open have more stars that ones that are closed.          
         
(But really there is not enough data to make these generalizations)


SQL code used for analysis:

SELECT b.name, b.city, b.review_count, b.stars, b.is_open
FROM business b JOIN category c on b.id = c.business_id
WHERE category = 'Restaurants' AND b.city = 'Toronto' 
ORDER BY b.review_count DESC;

	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
I will be analyzing key words from reviews to predict Restaurants with reviews with the word "Best" have higher average stars then reviews with the word "Horrible".
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
To set up my prediction, I will need to caluculate the average star rating to reviews that have the work "Best" and then compare it to the average of the word "Horrible".
I am choosing this data because it will give me all the information I need to determine if my prediction is correct of not.

        
iii. Output of your finished dataset:
         
         
iv. Provide the SQL code you used to create your final dataset:

To create predictive model:

SELECT AVG(r.stars)
FROM review r JOIN category c ON r.business_id = c.business_id
WHERE r.text LIKE '%best%' AND c.category = 'Restaurants'
+---------------+
|  AVG(r.stars) |
+---------------+
| 4.47826086957 |
+---------------+


SELECT AVG(r.stars)
FROM review r JOIN category c ON r.business_id = c.business_id
WHERE r.text LIKE '%horrible%' AND c.category = 'Restaurants';

+--------------+
| AVG(r.stars) |
+--------------+
|          1.5 |
+--------------+
